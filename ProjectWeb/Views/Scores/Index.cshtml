@model IEnumerable<ProjectWeb.Models.Score>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Remote Validation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClientIp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientIp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientIp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<h2>Index</h2>



<p>
    @Html.ActionLink("Create New", "Create")
</p>
<p>
    <input id="GameStart" type="button" value="Game Start" onclick="location.href='<%: Url.Action(" Start_Button", "ScoresController" )' />
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.login)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.points)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.seconds)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.login)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.points)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.seconds)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ClientIp)
    </td>
    <td>
        @Html.ActionLink("Edit", "Edit", new { id = item.playerID }) |
        @Html.ActionLink("Details", "Details", new { id = item.playerID }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.playerID })
    </td>
</tr>
    }

</table>
